// 下位机:nanopb

syntax = "proto2";

package hid.msg;

// 消息ID
enum MessageId {
  // 获取版本
  VERSION = 1;
  // 获取配置
  MOTOR_GET_CONFIG = 2;
  // 设置水墨屏
  EINK_SET_IMAGE = 3;
  // 保留字段
  DEV_UTILS = 4;
  // 获取/设置电机信息
  MOTOR_CONFIG = 5;
  // 获取系统设置
  GET_SYS_CFG = 6;
  // 修改系统设置
  SET_SYS_CFG = 7;
  // 获取电机状态
  MOTOR_GET_STATUS = 8;
}

// 扩展发来的消息
message CtrlMessage {
  required MessageId id = 1;
  oneof payload {
    Nil nil = 2;
    Version version = 3;
    Knob knob = 4;
    SysCfg sys_cfg = 5;
    knobStatus knob_status = 6;
  }
}

// 上位机发来的消息
message PcMessage {
  required MessageId id = 1;
  oneof payload {
    Nil nil = 2;
    Utils utils = 3;
    Eink eink = 4;
    Knob knob = 5;
    SysCfg sys_cfg = 6;
  }
}

// 插件消息ID
enum PluginMessageId {
  // 按钮状态
  BUTTON_STATUS = 1;
}
// 扩展发送的插件端口消息
message CtrlPluginMessage {
  required PluginMessageId id = 1;
  oneof payload {
    Nil nil = 2;
    ButtonStatus button_status = 3;
  }
}

message Nil {}

// 版本号消息
message Version {
  // git版本号
  required string GitVer = 1;
  // githash
  required string GitHash = 2;
  // git分支
  required string GitBranch = 3;
  // 编译时间
  required string BuildVersion = 4;
}

message Eink {
  required uint32 bits_size = 1;
  required string bits = 2;
}

// 电机消息ID
enum KnobMessage {
  // 获取App配置
  GetAppConfig = 1;
  // 设置App配置
  SetAppConfig = 2;
}

// 设置字段
enum SetAppType {
  // 电机模式
  KnobMode = 1;
  // 力矩限制
  TorqueLimit = 2;
  // 步数
  Step = 3;
  // 速度限制
  VelocityLimit = 4;
  // 附加值
  AddedValue = 5;
}

enum ButtonPinCallType {
  // 左侧按钮短按事件
  LeftButtonPressed = 1;
  // 右侧按钮短按事件
  RightButtonPressed = 2;
  // 左侧按钮长按事件
  LeftButtonLongPress = 3;
  // 右侧按钮长按事件
  RightButtonLongPress = 4;
};

// 按钮状态
message ButtonStatus {
  // 按钮状态
  required ButtonPinCallType status = 1;
}

// 电机消息
message Knob {
  required KnobMessage id = 1;
  required uint32 appid = 2;
  required uint32 knobMode = 3;
  // 力矩限制
  required ConfigData torqueLimitConf = 4;
  // 速度限制
  required ConfigData velocityLimitConf = 5;
  // 步数
  required ConfigData stepConf = 6;
  required SetAppType setAppType = 7;
  // 附加值
  required uint32 AddedValue = 8;
  // 参数值结构
  message ConfigData {
    // 值
    required float value = 1;
  }
}

message Utils {
  required uint32 id = 1;
  required uint32 uData = 2;
  required float fData = 3;
}

// 设置字段
enum SetSysCfgType {
  // 修改休眠时间
  SleepTime = 1;
}

// 系统设置
message SysCfg {
  required SetSysCfgType type = 1;
  required uint32 SleepTime = 2;
}

message knobPID {
  message Velocity {
    required float p = 1;
    required float i = 2;
    required float d = 3;
  }
  message Angle {
    required float p = 1;
    required float i = 2;
    required float d = 3;
  }
  required Velocity velocity = 4;
  required Angle angle = 5;
}

message knobStatus {
  // 时间戳
  required uint32 timestamp = 1;
  // 模式
  required uint32 knobMode = 2;
  // 当前角度
  required float current_angle = 3;
  // 目标角度
  required float target_angle = 4;
  // 当前速度
  required float current_velocity = 5;
  // 目标速度
  required float target_velocity = 6;
  // 目标电压
  required float target_voltage = 7;
}
